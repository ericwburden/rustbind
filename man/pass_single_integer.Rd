% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extendr-wrappers.R
\name{pass_single_integer}
\alias{pass_single_integer}
\title{Multiplies an integer by 10 in Rust}
\usage{
pass_single_integer(n)
}
\arguments{
\item{n}{An integer value to treat as an i32 in Rust}
}
\value{
n * 10
}
\description{
Demonstrates passing an integer back and forth between R and
Rust, multiplies the given integer by 10 in Rust to prove it works.
}
\details{
The value passed to this fuction must be an integer (from as.integer(n)) or
an NA_integer_. The Rust function signature is
\verb{fn pass_single_integer(n: Option<i32>) -> Option<i32>}, with NA's being
handled as \code{None} in Rust. The native R integer is also a signed 32-bit
integer, which is equivalent to Rust's \code{i32}.
}
\examples{
pass_single_integer(as.integer(25))  # 250
pass_single_integer(NA_integer_)     # NA_integer_

}
